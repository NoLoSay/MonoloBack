version: '3.8'
services:
  postgres:
    image: postgres:15.2-bullseye
    container_name: NoLoDatabase
    env_file:
      - ./.env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - postgres_net
    healthcheck:
      test:
        ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 5s
      retries: 10
  prisma-migrate:
    build: 
      context: .
      dockerfile: ./libs/prisma/Dockerfile
    container_name: NoLoPrisma
    env_file:
      - ./.env
    networks:
      - postgres_net
    depends_on:
      postgres:
        condition: service_healthy
  main-api:
    build: 
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: NoloAPI
    env_file:
      - ./.env
    environment:
      - PORT=${MAIN_API_PORT}
      - NODE_ENV=${ENV}
    ports:
      - ${MAIN_API_PORT}:${MAIN_API_PORT}
    networks:
      - postgres_net
      - elasticsearch_net
    depends_on:
      prisma-migrate:
        condition: service_started

  api-video:
    build: 
      context: .
      dockerfile: ./apps/video/Dockerfile
    container_name: NoloVideo
    env_file:
      - ./.env
    environment:
      - PORT=${VIDEO_API_PORT}
      - NODE_ENV=${ENV}
    ports:
      - ${VIDEO_API_PORT}:${VIDEO_API_PORT}
    networks:
      - postgres_net
      - elasticsearch_net
    depends_on:
      prisma-migrate:
        condition: service_started

volumes:
  nolo-postgres-data:

networks:
  postgres_net:
    driver: bridge
  elasticsearch_net:
    driver: bridge
